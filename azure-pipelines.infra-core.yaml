resources:
  repositories:
    - repository: templates
      type: github
      name: hmcts/azure-devops-templates
      ref: refs/heads/master
      endpoint: hmcts

pr: 
  - master

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - terraform/09-video-hearing-core

parameters:
- name: environment
  type: object
  default:
   - Dev
   - Demo
   - Stg
   - Prod

pool:
  vmImage: 'ubuntu-latest'

variables:
- name: tfVersion
  value: 1.2.0
- group: external
- name: azureLocation
  value: 'UK South'
stages:

################################################
# Validate Infra Code. #########################

- stage: Validate_Terraform_Code
  displayName: 'Validate Terraform Code'
  jobs:
    - job: Validate_Terraform_Code
      displayName: Validate Terraform Code
      steps:
      - task: AzureCLI@2
        displayName: 'Get Service Principals Details OUT'
        inputs:
          addSpnToEnvironment: true
          azureSubscription: 'DTS-SHAREDSERVICES-dev-Video Hearings'
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          inlineScript: |
            $id="$($env:servicePrincipalId)"
            Write-Host "ID: $id"
            $pwd="$($env:servicePrincipalKey)"
            Write-Host "pwd: $pwd"
            $tenantId = az account show --query tenantId -o tsv
            Write-Host "tenantId: $tenantId"
            $subscriptionId = az account show --query id -o tsv
            Write-Host "subscriptionId: $subscriptionId"

            Set-Content -Path $(Build.SourcesDirectory)/secret_file.txt -Value "id: $id /$pwd: $pwd"
      - task: PublishPipelineArtifact@1
        displayName: 'Publish SP Secrets Artifacts'
        inputs:
          targetPath: '$(Build.SourcesDirectory)/secret_file.txt'
          publishLocation: pipeline
          artifact: 'Secrets'

      - template: pipeline-steps/terraform-validate.yaml
        parameters:
          tfversion: ${{ variables.tfversion }}
          stack: '09-video-hearing-core'


################################################
# Terraform Plan & Apply. ######################

- ${{ each env in parameters.environment }}:
  - template: pipeline-steps/terraform-plan-apply.yaml
    parameters:
      terraformVersion: ${{ variables.tfVersion }}
      env: ${{ env }}
      location: ${{ variables.azureLocation }}
      environmentServiceConnection: DTS-SHAREDSERVICES-${{ env }}-Video Hearings
      stack: 09-video-hearing-core
      product: vh
      activityName: Video_Hearing_Core
      tfStateResourceGroup: vh-infra-core-${{ env }}-tf
      tfStateStorageAccountName: vhinfracore${{ env }}tf