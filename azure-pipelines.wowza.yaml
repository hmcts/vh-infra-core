resources:
  repositories:
    - repository: templates
      type: github
      name: hmcts/azure-devops-templates
      ref: refs/heads/master 
      endpoint: hmcts

pr: 
  branches:
    include:
    - master
  paths:
    exclude:
    - terraform/09-video-hearing-core/*

pool: 
  vmImage: ubuntu-22.04

trigger:
  branches:
    include:
    - master
  paths:
    exclude:
    - terraform/09-video-hearing-core/*

parameters:
- name: environment
  type: object
  default:
    - name: Dev
      dependsOnEnv: ""
    - name: Stg
      dependsOnEnv: "Dev"
    - name: Prod
      dependsOnEnv: "Stg"

# pool:
#   vmImage: 'ubuntu-latest'

variables:
- name: tfVersion
  value: 1.3.3
- group: external
- name: azureLocation
  value: 'UK South'
stages:

################################################
# Validate Infra Code. #########################

- stage: Validate_Terraform_Code
  displayName: 'Validate Terraform Code'
  jobs:
    - job: Validate_Terraform_Code
      displayName: Validate Terraform Code
      steps:
      - template: pipeline-steps/terraform-validate.yaml
        parameters:
          tfversion: ${{ variables.tfversion }}
          stack: '10-video-hearing-wowza'

################################################
# Terraform Plan & Apply. ######################

- ${{ each env in parameters.environment }}:
  - ${{ if and( eq(env.name, 'Dev'), contains(variables['Build.SourceBranch'], 'refs/pull')) }}:
    - template: pipeline-steps/terraform-plan-apply.yaml
      parameters:
        terraformVersion: ${{ variables.tfVersion }}
        env: ${{ env.name }}
        location: ${{ variables.azureLocation }}
        environmentServiceConnection: DTS-SHAREDSERVICES-${{ env.name }}-Video Hearings
        stack: 10-video-hearing-wowza
        product: wowza
        activityName: Video_Hearing_Wowza
        tfStateResourceGroup: vh-infra-core-${{ env.name }}-tf
        tfStateStorageAccountName: vhinfracore${{ env.name }}tf
        dependsOnEnv: ${{ env.dependsOnEnv }}

  - ${{ elseif eq(variables['Build.SourceBranchName'], 'master') }}:
      - template: pipeline-steps/terraform-plan-apply.yaml
        parameters:
          terraformVersion: ${{ variables.tfVersion }}
          env: ${{ env.name }}
          location: ${{ variables.azureLocation }}
          environmentServiceConnection: DTS-SHAREDSERVICES-${{ env.name }}-Video Hearings
          stack: 10-video-hearing-wowza
          product: wowza
          activityName: Video_Hearing_Wowza
          tfStateResourceGroup: vh-infra-core-${{ env.name }}-tf
          tfStateStorageAccountName: vhinfracore${{ env.name }}tf
          dependsOnEnv: ${{ env.dependsOnEnv }}