parameters:
  - name: environment
    displayName: env to run against...
    type: string
    values:
    - dev
    - stg
    - test
    - ithc
    - demo

    # There is no nice way to do a 'multi select' in ADO, so the best thing is to use an object and then a user can delete to ones they dont want
    # The other option is you have a param for each database with a yes/no option, but that will be messy. THe object also lets us loop
  - name: databases
    displayName: list the required databases to backup
    type: object
    default:
    - vhnotifications
    - vhbookings
    - vhvideo


# Use variables to peice together strings based on your params this can be done as they are set at run time
variables:
  - name: server
    value: "vh-infra-core-${{ parameters.environment }}"

  - name: sa
    value: "vhinfracore${{ parameters.environment }}"

  - name: keyvault
    value: "vh-infra-core-${{ parameters.environment }}"



jobs: 
  - job: backup
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: 'DTS-SHAREDSERVICES-${{parameters.environment}}-Video Hearings'
        scriptType: 'pscore'
        scriptLocation: 'inlineScript'
        inlineScript: 'echo "Hello World"'